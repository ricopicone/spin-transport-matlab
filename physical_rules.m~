%---physical rules
global T ii g G D B_r c T1 rmax u0 T12 T13 mu_p mu_e B0 B_d kB temp freq duty rho_1_langevin rho_2_langevin rho_3_langevin  d_rho_1_langevin d_rho_2_langevin d_rho_3_langevin

% precise constants to be used
digits(50)
precise_constant = vpa(...
    -1*... % I think this is because mag grad is negative
    tanh(...
        vpa( ...
            1 + vpa(gamma_e/gamma_p) * vpa(Delta_3/Delta_2) ...
        )/vpa( vpa(gamma_e/gamma_p) * ( 1 + vpa(Delta_3/Delta_2) ) ) * ...
        vpa(...
            vpa(mu_e * B_d) / ...
            vpa( kB * temp ) ...
        ) ...
    ) ...
);

% Langevin (equilibrium solution)
rho_1_langevin= @(r) double(precise_constant);    % langevin nuclear polarization
rho_2_langevin= @(r)  tanh((B0-B_d*r)*mu_p/kB/temp);    % langevin nuclear polarization
rho_3_langevin= @(r)  tanh((B0-B_d*r)*mu_e/kB/temp);    % langevin electron polarization

% gradient of equilibrium solution
d_rho_2_constant = -B_d*mu_p/kB/temp*(sech((B0-B_d*r)*mu_p/kB/temp))^2;
d_rho_1_langevin= @(r) 0;
d_rho_2_langevin= @(r)  -B_d*mu_p/kB/temp*(sech((B0-B_d*r)*mu_p/kB/temp))^2;    % langevin nuclear polarization
d_rho_3_langevin= @(r)  -B_d*mu_e/kB/temp*(sech((B0-B_d*r)*mu_e/kB/temp))^2;    % langevin electron polarization
